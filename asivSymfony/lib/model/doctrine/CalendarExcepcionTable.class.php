<?php

/**
 * CalendarExcepcionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CalendarExcepcionTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object CalendarExcepcionTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('CalendarExcepcion');
    }

    public function getExceptionIntervals($sStartDate, $sEndDate) {
        $oDQL = $this->createQuery("ce")
                ->where("ce.fecha_excepcion >= ? AND ce.fecha_excepcion <= ?", array($sStartDate, $sEndDate))
                ->andWhere("ce.status = ?", array(1));
        $aException = array();
        $aExceptionRecordList = $oDQL->execute();
        $oCalendarException = new CalendarExcepcion();
        foreach ($aExceptionRecordList as $oCalendarException) {
            array_push($aException, array(
                'title' => $oCalendarException->getMotivoExcepcion(),
                "start" => $oCalendarException->getFechaExcepcion() . "T" . $oCalendarException->getInicioExcepcion(),
                "end" => $oCalendarException->getFechaExcepcion() . "T" . $oCalendarException->getFinExcepcion()
            ));
        }
        $oDQL = $this->createQuery("ce")->where("ce.fecha_excepcion IS NULL");
        $aRecursiveEventList = $oDQL->execute(array(), Doctrine_Core::HYDRATE_RECORD);
        while ($sStartDate != $sEndDate) {
            foreach ($aRecursiveEventList as $oCalendarException) {
                array_push($aException, array(
                    'title' => $oCalendarException->getMotivoExcepcion(),
                    "start" => $sStartDate . "T" . $oCalendarException->getInicioExcepcion(),
                    "end" => $sStartDate . "T" . $oCalendarException->getFinExcepcion()
                ));
            }
            $sStartDate = date('Y-m-d', strtotime($sStartDate. ' + 1 days'));
        }
        return $aException;
    }

}